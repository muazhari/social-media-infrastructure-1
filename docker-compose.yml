services:
  gateway-1:
    image: nginx:latest
    ports:
      - "${GATEWAY_1_PORT}:80"
    volumes:
      - ${GATEWAY_1_PATH}:/app
      - ./nginx.conf:/etc/nginx/nginx.conf
  router-1:
    image: ghcr.io/wundergraph/cosmo/router:latest
    ports:
      - "${ROUTER_1_PORT}:3002"
    working_dir: /app
    env_file:
      - ./.env
    volumes:
      - ${ROUTER_1_PATH}:/app
  frontend-1:
    image: node:latest
    ports:
      - "${FRONTEND_1_PORT}:3000"
    working_dir: /app
    command:
      - npm
      - run
      - dev
    env_file:
      - ./.env
    volumes:
      - ${FRONTEND_1_PATH}:/app
  backend-1:
    image: golang:latest
    ports:
      - "${BACKEND_1_PORT}:8081"
    working_dir: /app
    command:
      - go
      - run
      - ./internal/main.go
    env_file:
      - ./.env
    volumes:
      - ${BACKEND_1_PATH}:/app
  backend-2:
    image: gradle:latest
    ports:
      - "${BACKEND_2_PORT}:8082"
    working_dir: /app
    command: 
      - gradle
      - bootRun
    env_file:
      - ./.env
    volumes:
      - ${BACKEND_2_PATH}:/app
  datastore-1:
    image: redis/redis-stack-server:latest
    ports:
      - "${DATASTORE_1_PORT}:6379"
    environment:
      - REDIS_ARGS=--requirepass ${DATASTORE_2_PASSWORD}
  datastore-2:
    image: postgis/postgis:latest
    ports:
      - "${DATASTORE_2_PORT}:5432"
    environment:
      POSTGRES_USER: ${DATASTORE_2_USER}
      POSTGRES_PASSWORD: ${DATASTORE_2_PASSWORD}
      POSTGRES_DB: ${DATASTORE_2_DATABASE}
      PGDATA: /var/lib/pg_data
    volumes:
      - ./migration-2.sql:/docker-entrypoint-initdb.d/migration-2.sql
  datastore-3:
    image: postgis/postgis:latest
    ports:
      - "${DATASTORE_3_PORT}:5432"
    environment:
      POSTGRES_USER: ${DATASTORE_3_USER}
      POSTGRES_PASSWORD: ${DATASTORE_3_PASSWORD}
      POSTGRES_DB: ${DATASTORE_3_DATABASE}
      PGDATA: /var/lib/pg_data
    volumes:
      - ./migration-3.sql:/docker-entrypoint-initdb.d/migration-3.sql